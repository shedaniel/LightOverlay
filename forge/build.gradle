plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadow
}

architectury {
//    transformerVersion = "2.0.9999"
    platformSetupLoomIde()
    forge()
}

loom {
    mixinConfig "lightoverlay-forge.mixins.json"
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
    inputs.property "META-INF/mods.toml", project.version
}

repositories {
    mavenLocal()
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architectury.minecraft}")
    mappings(minecraft.officialMojangMappings())
    forge("net.minecraftforge:forge:${rootProject.architectury.minecraft}-${project.forge_version}")
    modCompile("me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}")
    modCompile("me.shedaniel:architectury:${rootProject.architectury_version}:forge")

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentForge(project(path: ":common")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }
}

shadowJar {
    relocate "me.shedaniel.lightoverlay.common", "me.shedaniel.lightoverlay.common.forge"
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    archiveClassifier = "forge"
}

